/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Counsellor;

import business.EcoSystem;
import business.Network.Network;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import business.WorkQueue.CounsellorWorkRequest;
import business.WorkQueue.CaseReporterWorkRequest;
import business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author dax98
 */
public class CounsellorRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CounsellorRequestJPanel
     */
    JPanel userProcessContainer;
    EcoSystem system;
    UserAccount userAccount;
    Organization organization;
    CounsellorWorkRequest request;
    Network network;
    public CounsellorRequestJPanel(JPanel userProcessContainer, EcoSystem system, UserAccount userAccount,Organization organization,Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.organization=organization;
        this.userAccount = userAccount;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageCounsellorRequestDetails = new javax.swing.JTable();
        bt_AssignRequest = new javax.swing.JButton();
        bt_ViewReport = new javax.swing.JButton();
        bt_Encounters = new javax.swing.JButton();
        bt_CaseComplete = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 204, 255));

        lblHeader.setFont(new java.awt.Font("Songti SC", 1, 28)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(0, 0, 204));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("MANAGE REQUESTS");

        tblManageCounsellorRequestDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Time of Assault", "Status", "Assigned to"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManageCounsellorRequestDetails);

        bt_AssignRequest.setBackground(new java.awt.Color(0, 0, 204));
        bt_AssignRequest.setFont(new java.awt.Font("Songti SC", 1, 14)); // NOI18N
        bt_AssignRequest.setForeground(new java.awt.Color(255, 255, 255));
        bt_AssignRequest.setText("ASSIGN REQUEST");
        bt_AssignRequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt_AssignRequestMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt_AssignRequestMouseExited(evt);
            }
        });
        bt_AssignRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_AssignRequestActionPerformed(evt);
            }
        });

        bt_ViewReport.setBackground(new java.awt.Color(0, 0, 204));
        bt_ViewReport.setFont(new java.awt.Font("Songti SC", 1, 14)); // NOI18N
        bt_ViewReport.setForeground(new java.awt.Color(255, 255, 255));
        bt_ViewReport.setText("VIEW REPORT");
        bt_ViewReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt_ViewReportMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt_ViewReportMouseExited(evt);
            }
        });
        bt_ViewReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ViewReportActionPerformed(evt);
            }
        });

        bt_Encounters.setBackground(new java.awt.Color(0, 0, 204));
        bt_Encounters.setFont(new java.awt.Font("Songti SC", 1, 14)); // NOI18N
        bt_Encounters.setForeground(new java.awt.Color(255, 255, 255));
        bt_Encounters.setText("ENCOUNTER");
        bt_Encounters.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt_EncountersMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt_EncountersMouseExited(evt);
            }
        });
        bt_Encounters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_EncountersActionPerformed(evt);
            }
        });

        bt_CaseComplete.setBackground(new java.awt.Color(0, 0, 204));
        bt_CaseComplete.setFont(new java.awt.Font("Songti SC", 1, 14)); // NOI18N
        bt_CaseComplete.setForeground(new java.awt.Color(255, 255, 255));
        bt_CaseComplete.setText("CASE COMPLETE");
        bt_CaseComplete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt_CaseCompleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt_CaseCompleteMouseExited(evt);
            }
        });
        bt_CaseComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_CaseCompleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bt_AssignRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_ViewReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bt_Encounters, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_CaseComplete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(171, 171, 171))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bt_AssignRequest, bt_CaseComplete, bt_Encounters, bt_ViewReport});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_AssignRequest)
                    .addComponent(bt_Encounters, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_CaseComplete, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_ViewReport))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {bt_AssignRequest, bt_CaseComplete, bt_Encounters, bt_ViewReport});

    }// </editor-fold>//GEN-END:initComponents

    private void bt_AssignRequestMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_AssignRequestMouseEntered
        bt_AssignRequest.setForeground(new Color(0,128,128));        // TODO add your handling code here:
    }//GEN-LAST:event_bt_AssignRequestMouseEntered

    private void bt_AssignRequestMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_AssignRequestMouseExited
        bt_AssignRequest.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_bt_AssignRequestMouseExited

    private void bt_AssignRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_AssignRequestActionPerformed

        int selectedRow = tblManageCounsellorRequestDetails.getSelectedRow();
        CounsellorWorkRequest request = (CounsellorWorkRequest)tblManageCounsellorRequestDetails.getValueAt(selectedRow, 2);
        if (CheckOpenCases(userAccount) == 0){
            request.setReceiver(userAccount);
            request.setStatus("Accepted");
            populateTable();
        }else
        {
            JOptionPane.showMessageDialog(null, "Only one case can be accepted at a time");
        }
    }//GEN-LAST:event_bt_AssignRequestActionPerformed

    private void bt_ViewReportMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_ViewReportMouseEntered
        bt_ViewReport.setForeground(new Color(0,128,128));        // TODO add your handling code here:
    }//GEN-LAST:event_bt_ViewReportMouseEntered

    private void bt_ViewReportMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_ViewReportMouseExited
        bt_ViewReport.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_bt_ViewReportMouseExited

    private void bt_ViewReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ViewReportActionPerformed
        int selectedRow = tblManageCounsellorRequestDetails.getSelectedRow();
        DefaultTableModel model=(DefaultTableModel) tblManageCounsellorRequestDetails.getModel();
        String sta="Waiting";
        String stat=tblManageCounsellorRequestDetails.getValueAt(selectedRow, 2).toString();

        if(sta.equalsIgnoreCase(stat))
        {
            JOptionPane.showMessageDialog(null, "Access Denied");
        }
        else
        {

            if (selectedRow < 0){
                return;
            }

            CounsellorWorkRequest request = (CounsellorWorkRequest)tblManageCounsellorRequestDetails.getValueAt(selectedRow, 2);

            if (request.getReceiver()!=userAccount){
                JOptionPane.showMessageDialog(this, "You cannot view the report of this case. Access Denied.");
            }else{

                CaseReportCJPanel caseReportJPanel = new CaseReportCJPanel(userProcessContainer,system,request.getHswr(),userAccount,network);
                userProcessContainer.add("caseReportJPanel", caseReportJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
                /*CaseReportJPanel casereportJPanel=new CaseReportJPanel(userProcessContainer,system,request);
                casereportJPanel.setVisible(true);*/
            }

        }
    }//GEN-LAST:event_bt_ViewReportActionPerformed

    private void bt_EncountersMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_EncountersMouseEntered
        bt_Encounters.setForeground(new Color(0,128,128));        // TODO add your handling code here:
    }//GEN-LAST:event_bt_EncountersMouseEntered

    private void bt_EncountersMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_EncountersMouseExited
        bt_Encounters.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_bt_EncountersMouseExited

    private void bt_EncountersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_EncountersActionPerformed
        int selectedRow = tblManageCounsellorRequestDetails.getSelectedRow();
        DefaultTableModel model=(DefaultTableModel) tblManageCounsellorRequestDetails.getModel();
        String stat="Waiting";
        String statu=tblManageCounsellorRequestDetails.getValueAt(selectedRow, 2).toString();

        if(stat.equalsIgnoreCase(statu))
        {
            JOptionPane.showMessageDialog(null, "Access Denied");
        }
        else
        {
            if (selectedRow < 0){
                return;
            }
            CounsellorWorkRequest request = (CounsellorWorkRequest)tblManageCounsellorRequestDetails.getValueAt(selectedRow, 2);

            if (request.getReceiver()!=userAccount){
                JOptionPane.showMessageDialog(this, "You cannot view the report of this case. Access Denied.");
            }else{
                CounsellorEncounterJPanel cencounterJPanel = new CounsellorEncounterJPanel(userProcessContainer,system,userAccount,network,organization,request);
                userProcessContainer.add("caseReportJPanel", cencounterJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);

            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_bt_EncountersActionPerformed

    private void bt_CaseCompleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_CaseCompleteMouseEntered
        bt_CaseComplete.setForeground(new Color(0,128,128));        // TODO add your handling code here:
    }//GEN-LAST:event_bt_CaseCompleteMouseEntered

    private void bt_CaseCompleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_CaseCompleteMouseExited
        bt_CaseComplete.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_bt_CaseCompleteMouseExited

    private void bt_CaseCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_CaseCompleteActionPerformed
        int selectedRow = tblManageCounsellorRequestDetails.getSelectedRow();

        String s="Waiting";
        String status=tblManageCounsellorRequestDetails.getValueAt(selectedRow, 2).toString();
        if(s.equalsIgnoreCase(status))
        {
            JOptionPane.showMessageDialog(null, "Access Denied");
        }
        else
        {

            if (selectedRow < 0){
                return;
            }

            WorkRequest request = (CounsellorWorkRequest)tblManageCounsellorRequestDetails.getValueAt(selectedRow, 2);
            //request.setReceiver(userAccount);
            request.setStatus("Case Completed");
            populateTable();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_CaseCompleteActionPerformed
    
    private void populateTable() {
        DefaultTableModel model= (DefaultTableModel) tblManageCounsellorRequestDetails.getModel();
        Object[] row=new Object[4];
        model.setRowCount(0);
        
         for(CounsellorWorkRequest request : organization.getWorkQueue().getCounsellarworkRequestList())
         {
         
             //request.getHelpSeekerWorkRequest().getSender().getEmployee().getEmail();
            
             row[0]=request.getHswr().getChildName();
            row[1] = request.getHswr().getDoi();
            row[2] = request;
            if (request.getReceiver()==null){
              row[3] = "Not Assigned";
            }else{
              row[3] = request.getReceiver();
            }
            model.addRow(row);
        }
    }
    
    private int CheckOpenCases(UserAccount userAccount) {
        int a = 0;
        for(CounsellorWorkRequest request : organization.getWorkQueue().getCounsellarworkRequestList())
        {
        
          if (request.getReceiver()==userAccount){
              if (request.getStatus().equalsIgnoreCase("Accepted")){
                  a = a + 1;
              }
          } 
        }
        return a; 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_AssignRequest;
    private javax.swing.JButton bt_CaseComplete;
    private javax.swing.JButton bt_Encounters;
    private javax.swing.JButton bt_ViewReport;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JTable tblManageCounsellorRequestDetails;
    // End of variables declaration//GEN-END:variables
}
