/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Hospital;

import business.EcoSystem;
import business.Enterprise.Enterprise;
import business.Network.Network;
import business.Organization.ForensicOrganization;
import business.Organization.Organization;
import business.Organization.PharmacyOrganization;
import business.UserAccount.UserAccount;
import business.WorkQueue.CaseReporterWorkRequest;
import business.WorkQueue.LabAssistantWorkRequest;
import business.WorkQueue.PharmacistWorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author heenashah
 */
public class CaseReportDJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CaseReportDJPanel
     */
   JPanel userProcessContainer;
    EcoSystem system;
    CaseReporterWorkRequest request;
    UserAccount userAccount;
    Network network;
    Enterprise enterprise;
    Organization organization;
    public CaseReportDJPanel(JPanel userProcessContainer, EcoSystem system, CaseReporterWorkRequest request,UserAccount userAccount, Network network,Enterprise enterprise, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.request = request;
        this.userAccount = userAccount;
        this.network = network;
        this.enterprise = enterprise;
        this.organization = organization;
        PopulateReport();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        namesurvivorjLabel = new javax.swing.JLabel();
        relationjLabel = new javax.swing.JLabel();
        typejLabel = new javax.swing.JLabel();
        locationjLabel = new javax.swing.JLabel();
        timejLabel = new javax.swing.JLabel();
        detailsjLabel = new javax.swing.JLabel();
        suspecttypejLabel = new javax.swing.JLabel();
        namesuspectjLabel = new javax.swing.JLabel();
        txt_Survivor = new javax.swing.JTextField();
        txt_SusName = new javax.swing.JTextField();
        txt_Details = new javax.swing.JTextField();
        txt_Location = new javax.swing.JTextField();
        txt_relation = new javax.swing.JTextField();
        txt_AssaultType = new javax.swing.JTextField();
        txt_Date = new javax.swing.JTextField();
        txt_SusType = new javax.swing.JTextField();
        bt_ReqLab = new javax.swing.JButton();
        bt_ViewLab = new javax.swing.JButton();
        bt_PrescribeMeds = new javax.swing.JButton();
        bt_SendInvite = new javax.swing.JButton();
        bt_back = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));

        namesurvivorjLabel.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        namesurvivorjLabel.setForeground(new java.awt.Color(0, 0, 204));
        namesurvivorjLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        namesurvivorjLabel.setText("NAME OF SURVIVOR");

        relationjLabel.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        relationjLabel.setForeground(new java.awt.Color(0, 0, 204));
        relationjLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        relationjLabel.setText("RELATION WITH SURVIVOR");

        typejLabel.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        typejLabel.setForeground(new java.awt.Color(0, 0, 204));
        typejLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        typejLabel.setText("TYPE OF ASSAULT");

        locationjLabel.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        locationjLabel.setForeground(new java.awt.Color(0, 0, 204));
        locationjLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        locationjLabel.setText("LOCATION OF INCIDENT");

        timejLabel.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        timejLabel.setForeground(new java.awt.Color(0, 0, 204));
        timejLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        timejLabel.setText("DATE OF INCIDENT");

        detailsjLabel.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        detailsjLabel.setForeground(new java.awt.Color(0, 0, 204));
        detailsjLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        detailsjLabel.setText("MORE DETAILS");

        suspecttypejLabel.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        suspecttypejLabel.setForeground(new java.awt.Color(0, 0, 204));
        suspecttypejLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        suspecttypejLabel.setText("SUSPECT");

        namesuspectjLabel.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        namesuspectjLabel.setForeground(new java.awt.Color(0, 0, 204));
        namesuspectjLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        namesuspectjLabel.setText("NAME OF SUSPECT");

        txt_Survivor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SurvivorActionPerformed(evt);
            }
        });

        txt_relation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_relationActionPerformed(evt);
            }
        });

        txt_AssaultType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_AssaultTypeActionPerformed(evt);
            }
        });

        bt_ReqLab.setFont(new java.awt.Font("Songti SC", 1, 14)); // NOI18N
        bt_ReqLab.setForeground(new java.awt.Color(0, 0, 204));
        bt_ReqLab.setText("REQUEST LAB ");
        bt_ReqLab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt_ReqLabMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt_ReqLabMouseExited(evt);
            }
        });
        bt_ReqLab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ReqLabActionPerformed(evt);
            }
        });

        bt_ViewLab.setFont(new java.awt.Font("Songti SC", 1, 14)); // NOI18N
        bt_ViewLab.setForeground(new java.awt.Color(0, 0, 204));
        bt_ViewLab.setText("VIEW LAB TEST");
        bt_ViewLab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt_ViewLabMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt_ViewLabMouseExited(evt);
            }
        });
        bt_ViewLab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ViewLabActionPerformed(evt);
            }
        });

        bt_PrescribeMeds.setFont(new java.awt.Font("Songti SC", 1, 14)); // NOI18N
        bt_PrescribeMeds.setForeground(new java.awt.Color(0, 0, 204));
        bt_PrescribeMeds.setText("PRESCRIBE MEDICINES");
        bt_PrescribeMeds.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt_PrescribeMedsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt_PrescribeMedsMouseExited(evt);
            }
        });
        bt_PrescribeMeds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_PrescribeMedsActionPerformed(evt);
            }
        });

        bt_SendInvite.setFont(new java.awt.Font("Songti SC", 1, 14)); // NOI18N
        bt_SendInvite.setForeground(new java.awt.Color(0, 0, 204));
        bt_SendInvite.setText("SEND INVITE");
        bt_SendInvite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_SendInviteActionPerformed(evt);
            }
        });

        bt_back.setFont(new java.awt.Font("Songti SC", 1, 14)); // NOI18N
        bt_back.setForeground(new java.awt.Color(0, 0, 204));
        bt_back.setText("BACK");
        bt_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt_backMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt_backMouseExited(evt);
            }
        });
        bt_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 142, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(bt_SendInvite)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_ReqLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_ViewLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_PrescribeMeds))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(typejLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(relationjLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(locationjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timejLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(detailsjLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(suspecttypejLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(namesuspectjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(namesurvivorjLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_Survivor, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Location, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_AssaultType, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_relation, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_SusType, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_SusName, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt_Details, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_Date, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(bt_back)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bt_back, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namesurvivorjLabel)
                    .addComponent(txt_Survivor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(relationjLabel))
                    .addComponent(txt_relation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typejLabel)
                    .addComponent(txt_AssaultType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationjLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timejLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Details, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(detailsjLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_SusType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suspecttypejLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_SusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namesuspectjLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 86, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_ReqLab)
                    .addComponent(bt_ViewLab)
                    .addComponent(bt_PrescribeMeds)
                    .addComponent(bt_SendInvite))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 142;
        gridBagConstraints.ipady = 74;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(33, 24, 182, 146);
        jPanel1.add(jPanel2, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 889, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txt_SurvivorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SurvivorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_SurvivorActionPerformed

    private void txt_relationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_relationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_relationActionPerformed

    private void txt_AssaultTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_AssaultTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_AssaultTypeActionPerformed

    private void bt_ReqLabMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_ReqLabMouseEntered
        bt_ReqLab.setForeground(new Color(0,128,128));        // TODO add your handling code here:
    }//GEN-LAST:event_bt_ReqLabMouseEntered

    private void bt_ReqLabMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_ReqLabMouseExited
        bt_ReqLab.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_bt_ReqLabMouseExited

    private void bt_ReqLabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ReqLabActionPerformed
        // TODO add your handling code here:
        LabAssistantWorkRequest labrequest = new LabAssistantWorkRequest();
        labrequest.setDoctorWorkRequest(request.getDoctorWorkRequest());
        request.getDoctorWorkRequest().setLabAssistanceWorkRequest(labrequest);
        labrequest.setSender(userAccount);
        labrequest.setStatus("Waiting");
        if (userAccount==null){
            System.out.println("userAccount is not set");
        }

        Enterprise e= network.getEnterpriseDirectory().searchEnterprisebyType(Enterprise.EnterpriseType.Wellness);
        Organization org = null;
        for (Organization organization : e.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof ForensicOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getLabAssistanceWorkRequest().add(labrequest);
            //userAccount.getWorkQueue().getHelpSeekerworkRequestList().add(request);
            if(userAccount.getWrkQue().getLabAssistanceWorkRequest()==null){
                System.out.println("True");
            }
            userAccount.getWrkQue().getLabAssistanceWorkRequest().add(labrequest);
        }

        RequestLabTestJPanel requestLabTestJPanel = new RequestLabTestJPanel(userProcessContainer,system,labrequest,userAccount,network);
        userProcessContainer.add("caseReportJPanel", requestLabTestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

        //JOptionPane.showMessageDialog(null, "Request submitted to Forensic Department.");
    }//GEN-LAST:event_bt_ReqLabActionPerformed

    private void bt_ViewLabMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_ViewLabMouseEntered
        bt_ViewLab.setForeground(new Color(0,128,128));        // TODO add your handling code here:
    }//GEN-LAST:event_bt_ViewLabMouseEntered

    private void bt_ViewLabMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_ViewLabMouseExited
        bt_ViewLab.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_bt_ViewLabMouseExited

    private void bt_ViewLabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ViewLabActionPerformed
        // TODO add your handling code here:
        //System.out.println("Status "+request.getDoctorWorkRequest().getLabAssistanceWorkRequest().getStatus());
        if(request.getDoctorWorkRequest().getLabAssistanceWorkRequest().getStatus().equalsIgnoreCase("Waiting")){
            JOptionPane.showMessageDialog(this, "Requested has not been acccepted yet.");
        }else{
            LabTestResultsJPanel requestLabTestJPanel = new LabTestResultsJPanel(userProcessContainer,system,request.getDoctorWorkRequest().getLabAssistanceWorkRequest());
            userProcessContainer.add("caseReportJPanel", requestLabTestJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);}

    }//GEN-LAST:event_bt_ViewLabActionPerformed

    private void bt_PrescribeMedsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_PrescribeMedsMouseEntered
        bt_PrescribeMeds.setForeground(new Color(0,128,128));        // TODO add your handling code here:
    }//GEN-LAST:event_bt_PrescribeMedsMouseEntered

    private void bt_PrescribeMedsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_PrescribeMedsMouseExited
        bt_PrescribeMeds.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_bt_PrescribeMedsMouseExited

    private void bt_PrescribeMedsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_PrescribeMedsActionPerformed
        // TODO add your handling code here:
        PharmacistWorkRequest prequest = new PharmacistWorkRequest();
        prequest.setDoctorWorkRequest(request.getDoctorWorkRequest());
        request.getDoctorWorkRequest().setPharmacistWorkRequest(prequest);
        prequest.setSender(userAccount);
        prequest.setStatus("Waiting");
        if (userAccount==null){
            System.out.println("userAccount is not set");
        }

        Enterprise e= network.getEnterpriseDirectory().searchEnterprisebyType(Enterprise.EnterpriseType.Pharmaceutical);
        Organization org = null;
        for (Organization organization : e.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof PharmacyOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getPharmacistWorkRequest().add(prequest);
            //userAccount.getWorkQueue().getHelpSeekerworkRequestList().add(request);
            if(userAccount.getWrkQue().getLabAssistanceWorkRequest()==null){
                System.out.println("True");
            }
            userAccount.getWrkQue().getPharmacistWorkRequest().add(prequest);
        }

        PrescribeMedicinesJPanel requestLabTestJPanel = new PrescribeMedicinesJPanel(userProcessContainer,system,prequest);
        userProcessContainer.add("caseReportJPanel", requestLabTestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_bt_PrescribeMedsActionPerformed

    private void bt_SendInviteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_SendInviteActionPerformed
        String FromEmail="sexualawareness.help@gmail.com";
        String FromEmailPass="Fin@lProject21";
        String Subject = "Sign up successful";

        Properties properties=new Properties();
        properties.put("mail.smtp.auth", "true");
        properties.put("mail.smtp.starttls.enable", "true");
        properties.put("mail.smtp.host", "smtp.gmail.com");
        properties.put("mail.smtp.port", "587");

        Session session=Session.getDefaultInstance(properties, new javax.mail.Authenticator(){
            @Override
            protected PasswordAuthentication getPasswordAuthentication(){
                return new PasswordAuthentication(FromEmail,FromEmailPass);
            }
        });

        try
        {
            Message msg=new MimeMessage(session);
            msg.setFrom(new InternetAddress(FromEmail));
            msg.addRecipients(Message.RecipientType.TO, InternetAddress.parse(request.getEmail()));
            msg.setSubject("A Doctor has been assigned.");
            msg.setText("Dear "+ request.getUserName()+"\n"+"I am here to help you. Please schedule an appointment through the following link."+"\n"+"calendly.link"+"\n"+"Best,"+"\n"+userAccount.getEmp().getName());
            Transport.send(msg);
            JOptionPane.showMessageDialog(this, "Invitation has been sent successfully.");
        }catch(Exception e)
        {
            System.out.println(""+e);
            JOptionPane.showMessageDialog(this, "Incorrect E-mail id.Invitation cannot be been sent.");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_SendInviteActionPerformed

    private void bt_backMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_backMouseEntered
        bt_back.setForeground(new Color(0,128,128));        // TODO add your handling code here:
    }//GEN-LAST:event_bt_backMouseEntered

    private void bt_backMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_backMouseExited
        bt_back.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_bt_backMouseExited

    private void bt_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_backActionPerformed
        // TODO add your handling code here:

        /*
        RequestDoctorJPanel lencounterJPanel = new RequestDoctorJPanel(userProcessContainer,system,userAccount,DOrganization,network);
        userProcessContainer.add("caseReportJPanel", lencounterJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        //DoctorJPanel sysAdminwjp = (DoctorJPanel) component;
        //sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        */

        DoctorJPanel caseReportJPanel = new DoctorJPanel(userProcessContainer,userAccount,organization,enterprise,system,network);
        userProcessContainer.add("caseReportJPanel", caseReportJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_bt_backActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_PrescribeMeds;
    private javax.swing.JButton bt_ReqLab;
    private javax.swing.JButton bt_SendInvite;
    private javax.swing.JButton bt_ViewLab;
    private javax.swing.JButton bt_back;
    private javax.swing.JLabel detailsjLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel locationjLabel;
    private javax.swing.JLabel namesurvivorjLabel;
    private javax.swing.JLabel namesuspectjLabel;
    private javax.swing.JLabel relationjLabel;
    private javax.swing.JLabel suspecttypejLabel;
    private javax.swing.JLabel timejLabel;
    private javax.swing.JTextField txt_AssaultType;
    private javax.swing.JTextField txt_Date;
    private javax.swing.JTextField txt_Details;
    private javax.swing.JTextField txt_Location;
    private javax.swing.JTextField txt_Survivor;
    private javax.swing.JTextField txt_SusName;
    private javax.swing.JTextField txt_SusType;
    private javax.swing.JTextField txt_relation;
    private javax.swing.JLabel typejLabel;
    // End of variables declaration//GEN-END:variables
 private void PopulateReport() {
        txt_Survivor.setText(request.getUserName());
        txt_relation.setText(request.getRelation());
        txt_AssaultType.setText(request.getAssaultType());
        txt_Location.setText(request.getLocation());
        txt_Date.setText(request.getDoi().toString());
        txt_Details.setText(request.getMoredetails());
        txt_SusType.setText(request.getSuspecttype());
        txt_SusName.setText(request.getNameofsuspect());
        
        
    }
}
