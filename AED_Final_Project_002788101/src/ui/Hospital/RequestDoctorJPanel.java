/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Hospital;

import business.EcoSystem;
import business.Enterprise.Enterprise;
import business.Network.Network;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import business.WorkQueue.DrWorkRequest;
import business.WorkQueue.CaseReporterWorkRequest;
import business.WorkQueue.WorkRequest;
import ui.CaseVolunteer.CaseReportJPanel;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author heenashah
 */
public class RequestDoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestDoctorJPanel
     */
    JPanel userProcessContainer;
    EcoSystem system;
    UserAccount userAccount;
    Organization organization;
    DrWorkRequest request;
    Enterprise enterpirse;
    Network network;
    public RequestDoctorJPanel(JPanel userProcessContainer, EcoSystem system, UserAccount userAccount,Organization organization,Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.organization = organization;
        this.network = network;
        enterpirse = network.getEnterpriseDirectory().searchEnterprisebyType(Enterprise.EnterpriseType.Wellness);
        this.userAccount = userAccount;
        populatetable();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_Manage = new javax.swing.JTable();
        bt_Assign = new javax.swing.JButton();
        bt_ViewCase = new javax.swing.JButton();
        bt_CaseComplete = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setFont(new java.awt.Font("Songti SC", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAGE REQUESTS");

        tb_Manage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name of Patient", "Time of Assault", "Status", "Assigned to"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tb_Manage);

        bt_Assign.setBackground(new java.awt.Color(0, 0, 204));
        bt_Assign.setFont(new java.awt.Font("Songti SC", 1, 14)); // NOI18N
        bt_Assign.setForeground(new java.awt.Color(255, 255, 255));
        bt_Assign.setText("ASSIGN REQUEST");
        bt_Assign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt_AssignMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt_AssignMouseExited(evt);
            }
        });
        bt_Assign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_AssignActionPerformed(evt);
            }
        });

        bt_ViewCase.setBackground(new java.awt.Color(0, 0, 204));
        bt_ViewCase.setFont(new java.awt.Font("Songti SC", 1, 14)); // NOI18N
        bt_ViewCase.setForeground(new java.awt.Color(255, 255, 255));
        bt_ViewCase.setText("VIEW CASE REPORT");
        bt_ViewCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ViewCaseActionPerformed(evt);
            }
        });

        bt_CaseComplete.setBackground(new java.awt.Color(0, 0, 204));
        bt_CaseComplete.setFont(new java.awt.Font("Songti SC", 1, 14)); // NOI18N
        bt_CaseComplete.setForeground(new java.awt.Color(255, 255, 255));
        bt_CaseComplete.setText("CASE COMPLETE");
        bt_CaseComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_CaseCompleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bt_ViewCase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_Assign, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_CaseComplete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(bt_Assign)
                        .addGap(18, 18, 18)
                        .addComponent(bt_ViewCase)
                        .addGap(18, 18, 18)
                        .addComponent(bt_CaseComplete)))
                .addContainerGap(251, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bt_AssignMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_AssignMouseEntered
       bt_Assign.setForeground(new Color(0,128,128));        // TODO add your handling code here:
    }//GEN-LAST:event_bt_AssignMouseEntered

    private void bt_AssignMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_AssignMouseExited
          bt_Assign.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_bt_AssignMouseExited
   int i=1;
    private void bt_AssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_AssignActionPerformed


            int selectedRow = tb_Manage.getSelectedRow();
            WorkRequest request = (DrWorkRequest)tb_Manage.getValueAt(selectedRow, 2);
            if (CheckOpenCases(userAccount) == 0){
                request.setReceiver(userAccount);
                request.setStatus("Accepted");
                populatetable();
            }else
            {
                JOptionPane.showMessageDialog(null, "Only one case can be accepted at a time");
            }
    }//GEN-LAST:event_bt_AssignActionPerformed

    private void bt_ViewCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ViewCaseActionPerformed

        
        
        int selectedRow = tb_Manage.getSelectedRow();
        String st=tb_Manage.getValueAt(selectedRow, 3).toString();
        String stat="Waiting";
        if(st.equalsIgnoreCase(stat))
        {
            JOptionPane.showMessageDialog(null, "Access Denied");
        }
        else
        {
        if (selectedRow < 0){
            return;
        }

        DrWorkRequest request = (DrWorkRequest)tb_Manage.getValueAt(selectedRow, 2);
        request.getCaseReporterWorkRequest().setDoctorWorkRequest(request);

        if (request.getReceiver()!=userAccount){
            JOptionPane.showMessageDialog(this, "You cannot view the report of this case. Access Denied.");
        }else{

            CaseReportDJPanel caseReportJPanel = new CaseReportDJPanel(userProcessContainer,system,request.getCaseReporterWorkRequest(),userAccount,network,enterpirse,organization);
            userProcessContainer.add("caseReportJPanel", caseReportJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
        }
        }
    }//GEN-LAST:event_bt_ViewCaseActionPerformed

    private void bt_CaseCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_CaseCompleteActionPerformed
        int selectedRow = tb_Manage.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
     
        WorkRequest request = (DrWorkRequest)tb_Manage.getValueAt(selectedRow, 2);
       // WorkRequest newReq= (RehabilitationCaretakerWorkRequest);
        request.setReceiver(userAccount);
        request.setStatus("Case Completed");
        populatetable();
    }//GEN-LAST:event_bt_CaseCompleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_Assign;
    private javax.swing.JButton bt_CaseComplete;
    private javax.swing.JButton bt_ViewCase;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_Manage;
    // End of variables declaration//GEN-END:variables

    private void populatetable() {
        DefaultTableModel model= (DefaultTableModel) tb_Manage.getModel();
        Object[] row=new Object[4];
        model.setRowCount(0);
        
        for(DrWorkRequest request : organization.getWorkQueue().getDoctorworkRequestList())
        {
        
          row[0]=request.getCaseReporterWorkRequest().getUserName();
          row[1] = request.getCaseReporterWorkRequest().getDoi();
          row[2] = request;  
          if (request.getReceiver()==null){
              row[3] = "Not Assigned";
          }else{
              row[3] = request.getReceiver();
          }
          
          
          model.addRow(row);
        }
        
    }
    
    private int CheckOpenCases(UserAccount userAccount) {
        int a = 0;
        for(DrWorkRequest request : organization.getWorkQueue().getDoctorworkRequestList())
        {
        
          if (request.getReceiver()==userAccount){
              if (request.getStatus().equalsIgnoreCase("Accepted")){
                  a = a + 1;
              }
          } 
        }
        return a; 
    }
}
