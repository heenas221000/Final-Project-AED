/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.CaseReporter;

import buisness.Enterprise.CaseReporterEnterprise;
import buisness.Enterprise.Enterprise;
import buisness.Organization.CaseReporterOrganization;
import buisness.Organization.Organization;
import business.EcoSystem;
import business.UserAccount.UserAccount;
import java.awt.Color;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vishwa
 */
public class CaseReporterViewStatusJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CaseReporterViewStatusJPanel
     */
   private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private CaseReporterOrganization CROrganization; 
    private Organization organization;
    private CaseReporterEnterprise CREnterprise;
    
    public CaseReporterViewStatusJPanel(JPanel userProcessContainer, UserAccount account, Organization organization,Enterprise enterprise,EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.CROrganization = (CaseReporterOrganization)organization;
        this.CREnterprise = (CaseReporterEnterprise) enterprise;
        this.organization=organization;
        
       popTable();
       popStatusTable();
       lblCaseVolunteer.setVisible(false);
       lblDate.setVisible(false);
       lblReceiver.setVisible(false);
       lblStatus.setVisible(false);
       lblCounsellor.setVisible(false);
       lblCaretaker.setVisible(false);
       lblLawyer.setVisible(false);
       lblDoc.setVisible(false);
       lblPsych.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCases = new javax.swing.JTable();
        lblCaseVolunteer = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblReceiver = new javax.swing.JLabel();
        txtCaseVolunteerDate = new javax.swing.JLabel();
        txtCaseVolunteer = new javax.swing.JLabel();
        txtCaseVolunteerStatus = new javax.swing.JLabel();
        lblCounsellor = new javax.swing.JLabel();
        txtDoctorDate = new javax.swing.JLabel();
        txtDoctor = new javax.swing.JLabel();
        txtDoctorStatus = new javax.swing.JLabel();
        lblLawyer = new javax.swing.JLabel();
        lblDoc = new javax.swing.JLabel();
        lblPsych = new javax.swing.JLabel();
        txtCounsellorDate = new javax.swing.JLabel();
        txtCOunsellor = new javax.swing.JLabel();
        txtCounsellorStatus = new javax.swing.JLabel();
        txtLawyerDate = new javax.swing.JLabel();
        txtLawyer = new javax.swing.JLabel();
        txtLawyerStatus = new javax.swing.JLabel();
        txtlPsychDate = new javax.swing.JLabel();
        txtPsych = new javax.swing.JLabel();
        txtPsychStatus = new javax.swing.JLabel();
        btnCheckStatus = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        lblCaretaker = new javax.swing.JLabel();
        txtCaretakerStatus = new javax.swing.JLabel();
        txtCaretaker = new javax.swing.JLabel();
        txtCaretakerDate = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));

        tableCases.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Index", "Date", "Receiver ", "Current Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableCases);

        lblCaseVolunteer.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        lblCaseVolunteer.setForeground(new java.awt.Color(61, 64, 91));
        lblCaseVolunteer.setText("Case Volunteer");

        lblDate.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        lblDate.setForeground(new java.awt.Color(224, 122, 95));
        lblDate.setText("Date:");

        lblReceiver.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        lblReceiver.setForeground(new java.awt.Color(224, 122, 95));
        lblReceiver.setText("Reciever:");

        lblCounsellor.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        lblCounsellor.setForeground(new java.awt.Color(61, 64, 91));
        lblCounsellor.setText("Counsellor");

        lblLawyer.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        lblLawyer.setForeground(new java.awt.Color(61, 64, 91));
        lblLawyer.setText("Lawyer");

        lblDoc.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        lblDoc.setForeground(new java.awt.Color(61, 64, 91));
        lblDoc.setText("Doctor");

        lblPsych.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        lblPsych.setForeground(new java.awt.Color(61, 64, 91));
        lblPsych.setText("Psychiatrist");

        btnCheckStatus.setBackground(new java.awt.Color(51, 102, 255));
        btnCheckStatus.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        btnCheckStatus.setForeground(new java.awt.Color(61, 64, 91));
        btnCheckStatus.setText("Check Status");
        btnCheckStatus.setBorderPainted(false);
        btnCheckStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCheckStatusMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCheckStatusMouseExited(evt);
            }
        });
        btnCheckStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckStatusActionPerformed(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(224, 122, 95));
        lblStatus.setText("Status:");

        lblCaretaker.setFont(new java.awt.Font("Songti SC", 1, 18)); // NOI18N
        lblCaretaker.setForeground(new java.awt.Color(61, 64, 91));
        lblCaretaker.setText("Caretaker");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(btnCheckStatus))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(lblCaseVolunteer, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(lblDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(lblCounsellor, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(lblLawyer, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(lblPsych, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(lblCaretaker, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblDate))
                            .addComponent(lblReceiver))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCaseVolunteerDate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCaseVolunteer, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDoctorDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCounsellorDate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCOunsellor, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLawyerDate, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLawyer, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(txtPsych, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(txtCaretaker, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtlPsychDate, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(txtCaretakerDate, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblStatus)
                        .addGap(35, 35, 35)
                        .addComponent(txtCaseVolunteerStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(txtDoctorStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCounsellorStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(txtLawyerStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPsychStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(txtCaretakerStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(btnCheckStatus)))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCaseVolunteer)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDoc)
                            .addComponent(lblCounsellor)
                            .addComponent(lblLawyer)
                            .addComponent(lblPsych)
                            .addComponent(lblCaretaker))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(lblDate)
                        .addGap(13, 13, 13)
                        .addComponent(lblReceiver, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtCaseVolunteerDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCaseVolunteer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtDoctorDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtCounsellorDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(txtCOunsellor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtLawyerDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(txtLawyer, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(txtPsych, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(txtCaretaker, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtlPsychDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCaretakerDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtCaseVolunteerStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDoctorStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCounsellorStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLawyerStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPsychStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCaretakerStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckStatusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCheckStatusMouseEntered
        btnCheckStatus.setForeground(new Color(0,128,128));        // TODO add your handling code here:
    }//GEN-LAST:event_btnCheckStatusMouseEntered

    private void btnCheckStatusMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCheckStatusMouseExited
        btnCheckStatus.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_btnCheckStatusMouseExited

    private void btnCheckStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckStatusActionPerformed
        popStatusTable();
    }//GEN-LAST:event_btnCheckStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCaretaker;
    private javax.swing.JLabel lblCaseVolunteer;
    private javax.swing.JLabel lblCounsellor;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDoc;
    private javax.swing.JLabel lblLawyer;
    private javax.swing.JLabel lblPsych;
    private javax.swing.JLabel lblReceiver;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTable tableCases;
    private javax.swing.JLabel txtCOunsellor;
    private javax.swing.JLabel txtCaretaker;
    private javax.swing.JLabel txtCaretakerDate;
    private javax.swing.JLabel txtCaretakerStatus;
    private javax.swing.JLabel txtCaseVolunteer;
    private javax.swing.JLabel txtCaseVolunteerDate;
    private javax.swing.JLabel txtCaseVolunteerStatus;
    private javax.swing.JLabel txtCounsellorDate;
    private javax.swing.JLabel txtCounsellorStatus;
    private javax.swing.JLabel txtDoctor;
    private javax.swing.JLabel txtDoctorDate;
    private javax.swing.JLabel txtDoctorStatus;
    private javax.swing.JLabel txtLawyer;
    private javax.swing.JLabel txtLawyerDate;
    private javax.swing.JLabel txtLawyerStatus;
    private javax.swing.JLabel txtPsych;
    private javax.swing.JLabel txtPsychStatus;
    private javax.swing.JLabel txtlPsychDate;
    // End of variables declaration//GEN-END:variables
 private void popTable() {
        
        DefaultTableModel model= (DefaultTableModel) tableCases.getModel();
        Object[] row=new Object[4];
        model.setRowCount(0);
        int count = 1;
        for(CaseReporterWorkRequest request : userAccount.getWrkQue().getCaseReporterWorkRequestList())
         {
            request.setRequestid(count);
            row[0]=request.getRequestid();
            row[1] = request.getDoi();
            if (request.getReceiver()==null){
                row[2] = "Not Assigned";
            }else{
                row[2] = request.getReceiver().getEmp().getName();
            }
            row[3] = request;
            
           
            
            model.addRow(row);
            count++;
            txtCaseVolunteerDate.setText("");
            txtCaseVolunteer.setText("");
            txtCaseVolunteerStatus.setText("");
            
            
        }
        
        
    }
    
    
    private void popStatusTable() {
        int selectedRow = tableCases.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        if (selectedRow >= 0) {
            lblCaseVolunteer.setVisible(true);
            lblDate.setVisible(true);
            lblReceiver.setVisible(true);
            lblStatus.setVisible(true);
            lblCounsellor.setVisible(true);
            lblLawyer.setVisible(true);
            lblCaretaker.setVisible(true);
            lblDoc.setVisible(true);
            lblPsych.setVisible(true);
            CaseReporterWorkRequest  CaseRepoWorkReq  = (CaseReporterWorkRequest) tableCases.getValueAt(selectedRow, 3);
                 if(CaseRepoWorkReq!=null){
                     txtCaseVolunteerDate.setText(CaseRepoWorkReq.getRequestDate().toString());
                     if(CaseRepoWorkReq.getReceiver()==null){
                         txtCaseVolunteer.setText("Not Assigned");
                     }else{
                         txtCaseVolunteer.setText(CaseRepoWorkReq.getReceiver().toString());
                     }
                     txtCaseVolunteerStatus.setText(CaseRepoWorkReq.getStatus());
                     
                        if(CaseRepoWorkReq.getDoctorWorkRequest()!=null){
                            DrWorkRequest D = CaseRepoWorkReq.getDoctorWorkRequest(); 
                            txtDoctorDate.setText(D.getRequestDate().toString());
                        if(D.getReceiver()==null){
                            txtDoctor.setText("Not Assigned");
                        }else{
                            txtDoctor.setText(D.getReceiver().toString());
                        }
                        txtDoctorStatus.setText(D.getStatus());
                        }else{
                            txtDoctorDate.setText("-");
                            txtDoctor.setText("-");
                            txtDoctorStatus.setText("-");
                        }
                        
                        if(CaseRepoWorkReq.getCounsellorWorkRequest()!=null){
                            CounsellorWorkRequest C = CaseRepoWorkReq.getCounsellorWorkRequest(); 
                            txtCounsellorDate.setText(C.getRequestDate().toString());
                        if(C.getReceiver()==null){
                            txtCOunsellor.setText("Not Assigned");
                        }else{
                            txtCOunsellor.setText(C.getReceiver().toString());
                        }
                        txtCounsellorStatus.setText(C.getStatus());
                        }else{
                            txtCounsellorDate.setText("-");
                            txtCOunsellor.setText("-");
                            txtCounsellorStatus.setText("-");
                        }
                        
                        if(CaseRepoWorkReq.getHpWorkRequest()!=null){
                            PsychiatristWorkRequest P = CaseRepoWorkReq.getHpWorkRequest(); 
                            txtlPsychDate.setText(P.getRequestDate().toString());
                        if(P.getReceiver()==null){
                            txtPsych.setText("Not Assigned");
                        }else{
                            txtPsych.setText(P.getReceiver().toString());
                        }
                        txtPsychStatus.setText(P.getStatus());
                        }else{
                            txtlPsychDate.setText("-");
                            txtPsych.setText("-");
                            txtPsychStatus.setText("-");
                        }
                        
                        if(CaseRepoWorkReq.getLawyerWorkRequest()!=null){
                            LawyerWorkRequest L = CaseRepoWorkReq.getLawyerWorkRequest(); 
                            txtLawyerDate.setText(L.getRequestDate().toString());
                        if(L.getReceiver()==null){
                            txtLawyer.setText("Not Assigned");
                        }else{
                            txtLawyer.setText(L.getReceiver().toString());
                        }
                        txtLawyerStatus.setText(L.getStatus());
                        }else{
                            txtLawyerDate.setText("-");
                            txtLawyer.setText("-");
                            txtLawyerStatus.setText("-");
                        }
                        
                        
                        
                         if(CaseRepoWorkReq.getCaretakerWorkRequest()!=null){
                            CaretakerWorkRequest L = CaseRepoWorkReq.getCaretakerWorkRequest(); 
                            txtCaretakerDate.setText(L.getRequestDate().toString());
                        if(L.getReceiver()==null){
                            txtCaretaker.setText("Not Assigned");
                        }else{
                            txtCaretaker.setText(L.getReceiver().toString());
                        }
                        txtCaretakerStatus.setText(L.getStatus());
                        }else{
                            txtCaretakerDate.setText("-");
                            txtCaretaker.setText("-");
                            txtCaretakerStatus.setText("-");
                        }
                 }
                     
                 
             }
    }
    }
